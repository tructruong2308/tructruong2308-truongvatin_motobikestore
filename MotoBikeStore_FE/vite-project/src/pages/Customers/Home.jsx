// src/pages/Home.jsx
import { useEffect, useState } from "react"

const API_URL = "http://127.0.0.1:8000/products"
const PLACEHOLDER = "https://placehold.co/300x200?text=No+Image"

function ProductCard({ p }) {
  const price = Number(p.price) || 0
  const imgSrc = p.thumbnail_url || PLACEHOLDER

  return (
    <div
      className="product-card"
      style={{
        background: "#fff",
        borderRadius: 12,
        boxShadow: "0 2px 8px #e0f2f1",
        padding: 16,
        width: 220,
        margin: 8,
        textAlign: "center",
      }}
    >
      <div className="product-image" style={{ marginBottom: 10 }}>
        <img
          src={imgSrc}
          alt={p.name}
          style={{ width: "100%", height: 120, objectFit: "cover", borderRadius: 8 }}
          onError={(e) => {
            e.currentTarget.src = PLACEHOLDER
          }}
        />
      </div>
      <div className="product-info">
        <div className="name" style={{ fontWeight: "bold", fontSize: 16 }}>{p.name}</div>
        <div className="brand" style={{ color: "#388e3c", fontSize: 13 }}>
          {p.brand ? `Th∆∞∆°ng hi·ªáu #${p.brand}` : "Farm Local"}
        </div>
        <div className="price" style={{ color: "#43a047", fontWeight: "bold", marginTop: 4 }}>
          {price.toLocaleString()} ƒë
        </div>
      </div>
    </div>
  )
}

export default function Home() {
  const [newItems, setNewItems] = useState([])
  const [saleItems, setSaleItems] = useState([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState("")

  useEffect(() => {
    const ac = new AbortController()
    ;(async () => {
      try {
        const res = await fetch(API_URL, { signal: ac.signal })
        if (!res.ok) throw new Error(`HTTP ${res.status}`)
        const data = await res.json()
        setNewItems(data.slice(0, 4))
        setSaleItems(data.slice(-4))
      } catch (err) {
        if (err.name !== "AbortError") setError("Kh√¥ng t·∫£i ƒë∆∞·ª£c s·∫£n ph·∫©m")
      } finally {
        setLoading(false)
      }
    })()
    return () => ac.abort()
  }, [])

  return (
    <div
      className="home"
      style={{ fontFamily: "Montserrat, Arial, sans-serif", background: "#f1f8e9", minHeight: "100vh" }}
    >
      {/* Hero */}
      <section
        className="hero"
        style={{
          background: "linear-gradient(90deg, #e8f5e9 60%, #fffde7 100%)",
          padding: "48px 0 32px 0",
          textAlign: "center",
        }}
      >
        <h1 style={{ fontSize: 38, fontWeight: 700, color: "#388e3c", marginBottom: 10 }}>
          StoreVegetables ü•ïü•¶
        </h1>
        <p style={{ fontSize: 18, color: "#4caf50" }}>
          N∆°i cung c·∫•p rau c·ªß qu·∫£ t∆∞∆°i s·∫°ch t·ª´ n√¥ng tr·∫°i ƒë·∫øn b√†n ƒÉn
        </p>
      </section>

      {/* Danh m·ª•c */}
      <section style={{ margin: "40px 0" }}>
        <h2 style={{ fontSize: 24, fontWeight: 600, marginBottom: 18, color: "#388e3c" }}>
          Danh m·ª•c n·ªïi b·∫≠t
        </h2>
        <div
          className="categories"
          style={{ display: "flex", gap: 24, justifyContent: "center", flexWrap: "wrap" }}
        >
          {[
            { name: "Rau l√°", icon: "ü•¨" },
            { name: "C·ªß qu·∫£", icon: "ü•ï" },
            { name: "Tr√°i c√¢y", icon: "üçé" },
            { name: "H·ªØu c∆°", icon: "üå±" },
          ].map((c, i) => (
            <div
              key={i}
              className="category-card"
              style={{
                background: "#fff",
                borderRadius: 12,
                boxShadow: "0 2px 8px #e0f2f1",
                padding: "24px 32px",
                minWidth: 120,
                textAlign: "center",
                fontWeight: 500,
                fontSize: 17,
                color: "#388e3c",
                cursor: "pointer",
                transition: "transform 0.2s",
              }}
            >
              <div style={{ fontSize: 32, marginBottom: 8 }}>{c.icon}</div>
              {c.name}
            </div>
          ))}
        </div>
      </section>

      {/* Tr·∫°ng th√°i t·∫£i */}
      {loading && (
        <p style={{ textAlign: "center", color: "#388e3c" }}>ƒêang t·∫£i s·∫£n ph·∫©m...</p>
      )}
      {error && (
        <p style={{ textAlign: "center", color: "#d32f2f" }}>{error}</p>
      )}

      {/* S·∫£n ph·∫©m m·ªõi */}
      {!loading && !error && (
        <>
          <section style={{ margin: "40px 0" }}>
            <h2 style={{ fontSize: 24, fontWeight: 600, marginBottom: 18, color: "#388e3c" }}>
              S·∫£n ph·∫©m m·ªõi
            </h2>
            <div
              className="products"
              style={{ display: "flex", gap: 24, flexWrap: "wrap", justifyContent: "center" }}
            >
              {newItems.map((p) => (
                <ProductCard key={p.id} p={p} />
              ))}
            </div>
          </section>

          {/* S·∫£n ph·∫©m sale */}
          <section style={{ margin: "40px 0" }}>
            <h2 style={{ fontSize: 24, fontWeight: 600, marginBottom: 18, color: "#ff7043" }}>
              ƒêang gi·∫£m gi√°
            </h2>
            <div
              className="products"
              style={{ display: "flex", gap: 24, flexWrap: "wrap", justifyContent: "center" }}
            >
              {saleItems.map((p) => (
                <ProductCard key={p.id} p={p} />
              ))}
            </div>
          </section>
        </>
      )}

      {/* About */}
      <section
        className="about"
        style={{
          background: "#fff",
          borderRadius: 16,
          boxShadow: "0 2px 8px #e0f2f1",
          padding: "32px 24px",
          margin: "40px auto 24px auto",
          maxWidth: 700,
          textAlign: "center",
        }}
      >
        <h2 style={{ fontSize: 22, fontWeight: 600, marginBottom: 10, color: "#388e3c" }}>
          V·ªÅ ch√∫ng t√¥i
        </h2>
        <p style={{ color: "#4caf50", fontSize: 16 }}>
          StoreVegetables cam k·∫øt mang ƒë·∫øn nh·ªØng s·∫£n ph·∫©m n√¥ng s·∫£n t∆∞∆°i s·∫°ch, an to√†n v√† gi√†u dinh d∆∞·ª°ng.
          Ch√∫ng t√¥i k·∫øt n·ªëi n√¥ng d√¢n v√† ng∆∞·ªùi ti√™u d√πng, v√¨ m·ªôt cu·ªôc s·ªëng xanh, kh·ªèe m·∫°nh v√† b·ªÅn v·ªØng.
        </p>
      </section>
    </div>
  )
}
